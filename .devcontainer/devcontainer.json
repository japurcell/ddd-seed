// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.117.1/containers/dotnetcore-3.1
{
  "name": "C# (.NET Core 3.1)",
  "dockerFile": "Dockerfile",
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash"
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "editorconfig.editorconfig",
    "jchannon.csharpextensions",
    "k--kato.docomment",
    "ms-dotnettools.csharp"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [5000, 5001],
  // [Optional] To reuse of your local HTTPS dev cert, first export it locally using this command:
  //  * Windows PowerShell:
  //     dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //  * macOS/Linux terminal:
  //     dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //
  // Next, after running the command above, uncomment lines in the 'mounts' and 'remoteEnv' lines below,
  // and open / rebuild the container so the settings take effect.
  //
  "remoteUser": "vscode",
  "mounts": [
    "source=vscode-extensions,target=/home/vscode/.vscode-server/extensions,type=volume",
    // And/or for VS Code Insiders
    "source=vscode-insiders,target=/home/vscode/.vscode-server-insiders/extensions,type=volume",
  ],
  "remoteEnv": {
    // "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
    // "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
  },
  //"postCreateCommand": "sudo chown vscode dotnet"
}
